---
export const prerender = false;
import { IoCaretBackCircle } from "solid-icons/io";
import AfterOrBeforeLink from "../../../components/AfterOrBeforeLink.astro";
import Game from "../../../components/Game";
import GameFooter from "../../../components/GameFooter.astro";
import TitleBar from "../../../components/TitleBar.astro";
import MainLayout from "../../../layout/MainLayout.astro";
import type { Challenge } from "../../../lib/clientChallenge";
import { getChallengeById } from "../../../lib/server/challenge";
import { extractDataFromWiki } from "../../../lib/web";
const { id } = Astro.params;
if (!id) return Astro.redirect("/");
const parsedId = Number(id);
if (isNaN(parsedId)) return Astro.redirect("/notFound");
const challenge: Challenge | null = await getChallengeById(parsedId);
if (!challenge) return Astro.redirect("/notFound");
const { title, hints, starred, encodedTitle } = challenge;
const text = await extractDataFromWiki(title);
if (!text) return Astro.redirect("/internalError");
---

<MainLayout subtitle="Game">
	<div class="flex flex-col items-center gap-4">
		<TitleBar id={parsedId} starred={starred} title={title} />
		{text && <Game client:load text={text} encodedTitle={encodedTitle} />}
		<GameFooter title={title} extract={text.extract} hints={hints} />
		<a
			href="/"
			class="mt-4 flex items-center gap-2 text-blue-500 hover:underline"
		>
			<IoCaretBackCircle />
			<span>Go back to the main page</span>
		</a>
		<AfterOrBeforeLink id={parsedId} server:defer />
	</div>
</MainLayout>
