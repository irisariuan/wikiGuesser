---
export const prerender = false;

import { IoCaretBackCircle } from "solid-icons/io";
import Game from "../../../components/Game";
import GameFooter from "../../../components/GameFooter.astro";
import TitleBar from "../../../components/TitleBar.astro";
import MainLayout from "../../../layout/MainLayout.astro";
import {
	createOrGetDailyChallenge,
} from "../../../lib/server/challenge";
import { encodeToBase64, getDateString } from "../../../lib/utils";
import { extractDataFromWiki } from "../../../lib/web";
import DailyAfterOrBeforeLink from "../../../components/DailyAfterOrBeforeLink.astro";

const { date } = Astro.params;
if (date && !/\d{4}-\d{2}-\d{2}/.test(date))
	return Astro.redirect("/notFound");
const finalDate = date ?? getDateString();
const challenge = await createOrGetDailyChallenge(
	finalDate,
	date === getDateString(),
);
if (!challenge) return Astro.redirect("/notFound");
const { title: rawTitle } = challenge;
const encodedTitle = encodeToBase64(rawTitle);
const content = await extractDataFromWiki(rawTitle);
if (!content || !encodedTitle) return Astro.redirect("/internalError");
const { title, extract } = content;
---

<MainLayout subtitle={"Daily Challenge - ".concat(finalDate)}>
	<div class="flex flex-col items-center gap-4">
		<h1 class="text-2xl font-bold mt-2">
			Daily Challenge for {date}
		</h1>
		<TitleBar
			id={challenge.id}
			starred={challenge.starred}
			title={rawTitle}
		/>
		<Game client:load text={content} encodedTitle={encodedTitle} />
		<GameFooter title={title} extract={extract} />
		<a
			href="/"
			class="mt-4 flex items-center gap-2 text-blue-500 hover:underline"
		>
			<IoCaretBackCircle />
			<span>Go back to the main page</span>
		</a>
		<DailyAfterOrBeforeLink date={finalDate} server:defer />
	</div>
</MainLayout>
